from velocity import Point
from velocity import Velocity
from abc import abstractmethod

#objets loops, advance and all have the abstract draw
class FlyingObject:
    def __init__(self):
        self.center = Point()
        self.velocity = Velocity()
        self.alive = True
        self.angle = 0

#python library imported to draw object a certain way

    @abstractmethod
    def draw(self):
        pass

#object moves however fast the dx,dy velocity values are

    def advance(self):
        self.center.x += self.velocity.dx
        self.center.y += self.velocity.dy

#object doesnt go past the end of the screen and will bounce back

    def is_off_screen(self,SCREEN_WIDTH,SCREEN_HEIGHT):
        if self.center.x > SCREEN_WIDTH:
            self.center.x = 0
        if self.center.x < 0:
            self.center.x = 800
        if self.center.y > SCREEN_HEIGHT:
            self.center.y = 0
        if self.center.y < 0:
            self.center.y = 600
